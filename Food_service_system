from collections import deque
class Food_Order:
    def __init__(self):
        self.queue=deque()
    def Place_Order(self,arr):
        for foods in arr:
            self.queue.appendleft(foods)
            print(self.queue)
            time.sleep(0.5)
    def Serve_Order(self):
        while(len(self.queue)>0):
            print(self.queue.pop())
            time.sleep(2)
        if(len(self.queue)<=0):
            try:
                raise Exception('All served')
            except Exception as e:
                print(e)
if __name__=='__main__':
    q=Food_Order()
    orders=["pizza","samosa","pasta","biryani","burger"]
    t=time.time()
    t1=threading.Thread(target=q.Place_Order,args=(orders,))
    t2=threading.Thread(target=q.Serve_Order)
    t1.start()
    t2.start()
